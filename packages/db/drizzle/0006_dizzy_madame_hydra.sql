ALTER TYPE "public"."transaction_type" ADD VALUE 'bill' BEFORE 'other';--> statement-breakpoint
CREATE TABLE "bill" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "bill_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"party_id" bigint,
	"name" varchar(256) NOT NULL,
	"amount" numeric NOT NULL,
	"start_date" timestamp NOT NULL,
	"end_date" timestamp,
	"days_between" smallint NOT NULL,
	"is_active" boolean DEFAULT true NOT NULL,
	"user_id" text NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp
);
--> statement-breakpoint
CREATE TABLE "bill_instance" (
	"id" bigint PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY (sequence name "bill_instance_id_seq" INCREMENT BY 1 MINVALUE 1 MAXVALUE 9223372036854775807 START WITH 1 CACHE 1),
	"bill_id" bigint NOT NULL,
	"date" timestamp NOT NULL,
	"user_id" text NOT NULL,
	"created_at" timestamp DEFAULT now() NOT NULL,
	"updated_at" timestamp
);
--> statement-breakpoint
ALTER TABLE "transaction" DROP CONSTRAINT "type_check";--> statement-breakpoint
ALTER TABLE "transaction" ALTER COLUMN "id" SET GENERATED BY DEFAULT;--> statement-breakpoint
ALTER TABLE "transaction" drop column "type";--> statement-breakpoint
ALTER TABLE "transaction" ADD COLUMN "type" "transaction_type" GENERATED ALWAYS AS ( CASE 
    WHEN budget_id IS NOT NULL THEN 'budget'::transaction_type
    WHEN pot_id IS NOT NULL THEN 'pot'::transaction_type
    WHEN bill_instance_id IS NOT NULL THEN 'bill'::transaction_type
    ELSE 'other'::transaction_type
  END) STORED NOT NULL;--> statement-breakpoint
ALTER TABLE "transaction" ADD COLUMN "bill_instance_id" integer;--> statement-breakpoint
ALTER TABLE "bill" ADD CONSTRAINT "bill_party_id_party_id_fk" FOREIGN KEY ("party_id") REFERENCES "public"."party"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "bill" ADD CONSTRAINT "bill_user_id_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "bill_instance" ADD CONSTRAINT "bill_instance_bill_id_bill_id_fk" FOREIGN KEY ("bill_id") REFERENCES "public"."bill"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "bill_instance" ADD CONSTRAINT "bill_instance_user_id_user_id_fk" FOREIGN KEY ("user_id") REFERENCES "public"."user"("id") ON DELETE no action ON UPDATE no action;--> statement-breakpoint
CREATE INDEX "bill_user_id_index" ON "bill" USING btree ("user_id");--> statement-breakpoint
CREATE INDEX "bill_instance_user_id_index" ON "bill_instance" USING btree ("user_id");--> statement-breakpoint
ALTER TABLE "transaction" ADD CONSTRAINT "transaction_bill_instance_id_bill_instance_id_fk" FOREIGN KEY ("bill_instance_id") REFERENCES "public"."bill_instance"("id") ON DELETE set null ON UPDATE no action;--> statement-breakpoint
ALTER TABLE "transaction" ADD CONSTRAINT "type_check" CHECK ((budget_id IS NOT NULL AND pot_id IS NULL AND bill_instance_id IS NULL) OR
  (pot_id IS NOT NULL AND budget_id IS NULL AND bill_instance_id IS NULL) OR
  (pot_id IS NULL AND budget_id IS NULL AND bill_instance_id IS NOT NULL) OR
  (budget_id IS NULL AND pot_id IS NULL AND bill_instance_id IS NULL));